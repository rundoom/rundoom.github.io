(function(storyContent) {
    // –°–æ–∑–¥–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –∏–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    var story = new inkjs.Story(storyContent);

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
    var savePoint = "";
    var savedTheme;
    var globalTagTheme;
    var lastChoiceText = ""; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ
    window.hasDoneChoice = false

    // –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–∞–Ω–µ–ª–∏
    var storyPanel = document.getElementById('story-content');
    var imagePanel = document.getElementById('image-content');
    var choicesPanel = document.getElementById('choices-content');
    var statusPanel = document.getElementById('status-content');

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Ç–µ–≥–æ–≤
    var globalTags = story.globalTags;
    if (globalTags) {
        for (var i = 0; i < globalTags.length; i++) {
            var globalTag = globalTags[i];
            var splitTag = splitPropertyTag(globalTag);

            if (splitTag && splitTag.property == "theme") {
                globalTagTheme = splitTag.val;
            }

            if (splitTag && splitTag.property == "author") {
                var titleElement = document.getElementById('story-title');
                if (titleElement) {
                    titleElement.innerHTML += '<br><small>by ' + splitTag.val + '</small>';
                }
            }
        }
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã –∏ –∫–Ω–æ–ø–æ–∫
    setupTheme(globalTagTheme);
    var hasSave = loadSavePoint();
    setupButtons(hasSave);

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–π —Ç–æ—á–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ)
    if (!hasSave) {
        savePoint = JSON.stringify({
            storyState: story.state.toJson(),
            lastChoice: ""
        });
    }

    // –ó–∞–ø—É—Å–∫ –∏—Å—Ç–æ—Ä–∏–∏
    continueStory(!hasSave); // true —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–æ–≤–∞—è –∏–≥—Ä–∞, –Ω–µ –∑–∞–≥—Ä—É–∑–∫–∞

    // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–∫–∏–¥–∞–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    setupAutoSave();

    // –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏
    function continueStory(firstTime) {
        // –û—á–∏—â–∞–µ–º –ø–∞–Ω–µ–ª–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
        if (firstTime) {
            clearPanel(storyPanel);
            clearPanel(choicesPanel);
            // –ö–∞—Ä—Ç–∏–Ω–∫—É –∏ —Å—Ç–∞—Ç—É—Å –æ—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ —Ä–µ—Å—Ç–∞—Ä—Ç
        }

        var storyText = '';
        var hasNewContent = false;

        // –°–æ–±–∏—Ä–∞–µ–º –≤–µ—Å—å –¥–æ—Å—Ç—É–ø–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
        while (story.canContinue) {
            var paragraphText = story.Continue();
            var tags = story.currentTags;

            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–≥–æ–≤
            var shouldShowText = true;
            var imageProcessed = false;

            for (var i = 0; i < tags.length; i++) {
                var tag = tags[i];
                var splitTag = splitPropertyTag(tag);

                if (splitTag) {
                    splitTag.property = splitTag.property.toUpperCase();

                    // IMAGE: –ø—É—Ç—å –∫ –∫–∞—Ä—Ç–∏–Ω–∫–µ
                    if (splitTag.property == "IMAGE") {
                        updateImagePanel(splitTag.val);
                        imageProcessed = true;
                    }

                    // CLASS: —Å—Ç–∏–ª–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ (–æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
                    if (splitTag.property == "CLASS") {
                        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–ª–∞—Å—Å—ã –∫ —Ç–µ–∫—Å—Ç—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                    }
                }

                // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç–µ–≥–∏
                if (tag == "CLEAR") {
                    clearPanel(storyPanel);
                    clearPanel(imagePanel);
                    shouldShowText = false;
                }

                if (tag == "RESTART") {
                    restart();
                    return;
                }
            }

            // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤ –ø–∞–Ω–µ–ª—å –∏—Å—Ç–æ—Ä–∏–∏, –µ—Å–ª–∏ –æ–Ω –Ω–µ –ø—É—Å—Ç–æ–π
            if (shouldShowText && paragraphText.trim().length > 0) {
                storyText += paragraphText + '\n\n';
                hasNewContent = true;
            }
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å –∏—Å—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
        if (hasNewContent) {
            // –í—Å–µ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–µ–º –∫–∞–∫ –±–ª–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ (–¥–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏—è)
            addStoryBlock('result', storyText.trim());
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        updateStatusPanel();

        // –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–±–æ—Ä—ã
        updateChoicesPanel();
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–ª–æ–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ (–≤—ã–±–æ—Ä –∏–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç)
    function addStoryBlock(type, text) {
        var blockDiv = document.createElement('div');
        blockDiv.classList.add('story-block');
        blockDiv.classList.add('story-block-' + type);

        if (type === 'choice') {
            // –ë–ª–æ–∫ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –¥–µ–π—Å—Ç–≤–∏–µ–º - –ò–°–ü–†–ê–í–õ–ï–ù–û
            blockDiv.innerHTML = '<div class="choice-header">‚ñ∂ ' + text + '</div>';
        } else if (type === 'result') {
            // –ë–ª–æ–∫ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –¥–µ–π—Å—Ç–≤–∏—è
            var paragraphs = text.split('\n\n');
            var content = '';
            for (var i = 0; i < paragraphs.length; i++) {
                if (paragraphs[i].trim()) {
                    content += '<p>' + paragraphs[i].trim() + '</p>';
                }
            }
            blockDiv.innerHTML = content;
        }

        // –î–æ–±–∞–≤–ª—è–µ–º —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        blockDiv.classList.add('hide');
        storyPanel.appendChild(blockDiv);

        setTimeout(function() {
            blockDiv.classList.remove('hide');
        }, 50);

        // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑
        setTimeout(function() {
            storyPanel.scrollTop = storyPanel.scrollHeight;
        }, 100);
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –∏—Å—Ç–æ—Ä–∏–∏
    function updateStoryPanel(text) {
        if (text) {
            var paragraphs = text.split('\n\n');
            for (var i = 0; i < paragraphs.length; i++) {
                if (paragraphs[i].trim()) {
                    var p = document.createElement('p');
                    p.innerHTML = paragraphs[i].trim();
                    p.classList.add('hide');
                    storyPanel.appendChild(p);

                    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
                    setTimeout(function(element) {
                        return function() {
                            element.classList.remove('hide');
                        };
                    }(p), i * 100);
                }
            }

            // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑
            storyPanel.scrollTop = storyPanel.scrollHeight;
        }
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏
    function updateImagePanel(imagePath) {
        imagePanel.innerHTML = '';
        var img = document.createElement('img');

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ images/ –µ—Å–ª–∏ –ø—É—Ç—å –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ª–µ—à
        var fullPath = imagePath;
        if (imagePath.indexOf('/') === -1 && imagePath.indexOf('http') !== 0) {
            fullPath = 'images/' + imagePath;
        }

        img.src = fullPath;
        img.alt = '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ü–µ–Ω—ã';
        img.onerror = function() {
            imagePanel.innerHTML = '<div class="placeholder-image"><span>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ:<br>' + fullPath + '</span></div>';
        };
        imagePanel.appendChild(img);
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ —Å—Ç–∞—Ç—É—Å–∞ —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–µ —á—Ç–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    function updateStatusPanel() {
        try {
            // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ variablesState
            var location = story.variablesState.current_location || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
            var hp = story.variablesState.hp || 0;
            var maxHp = story.variablesState.max_hp || 10;
            var hunger = story.variablesState.hunger || 0;
            var maxHunger = story.variablesState.max_hunger || 10;
            var money = story.variablesState.money || 0;
            var moneyName = story.variablesState.money_name || "";

            // –ü–æ–ª—É—á–∞–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ–≥–æ
            var inventory = getInventoryDisplay();

            // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
            var statusLines = [
                'üìç –õ–æ–∫–∞—Ü–∏—è: ' + location,
                '‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: ' + hp + '/' + maxHp + ' (' + getHpStatus(hp) + ')',
                'üçñ –ì–æ–ª–æ–¥: ' + hunger + '/' + maxHunger + ' (' + getHungerStatus(hunger) + ')',
                'üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: ' + inventory
            ];

            // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–Ω—å–≥–∏ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
            if (moneyName && moneyName !== "") {
                statusLines.push('üíé ' + moneyName + ': ' + money);
            }

            displayStatus(statusLines);
        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', e);
            displayStatus([
                '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç—É—Å–∞',
                '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –¥–µ—Ç–∞–ª–µ–π'
            ]);
        }
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–¥–æ—Ä–æ–≤—å—è
    function getHpStatus(hp) {
        if (hp >= 10) return "üíö –ê–±—Å–æ–ª—é—Ç–Ω–æ –∑–¥–æ—Ä–æ–≤";
        if (hp >= 9) return "üíö –ü–æ—á—Ç–∏ –∏–¥–µ–∞–ª—å–Ω–æ";
        if (hp >= 8) return "üíö –í —Ö–æ—Ä–æ—à–µ–π —Ñ–æ—Ä–º–µ";
        if (hp >= 7) return "üíõ –õ—ë–≥–∫–∏–µ —Ü–∞—Ä–∞–ø–∏–Ω—ã";
        if (hp >= 6) return "üíõ –ù–µ–º–Ω–æ–≥–æ –ø–æ–±–∏—Ç";
        if (hp >= 5) return "üíõ –ó–∞–º–µ—Ç–Ω–æ –ø–æ—Ç—Ä–µ–ø–∞–Ω";
        if (hp >= 4) return "üß° –°–∏–ª—å–Ω–æ —Ä–∞–Ω–µ–Ω";
        if (hp >= 3) return "üß° –¢—è–∂–µ–ª–æ —Ä–∞–Ω–µ–Ω";
        if (hp >= 2) return "‚ù§Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ";
        if (hp >= 1) return "‚ù§Ô∏è –ü—Ä–∏ —Å–º–µ—Ä—Ç–∏";
        if (hp <= 0) return "üíÄ –ú—ë—Ä—Ç–≤";
        return "‚≠ê –°–≤–µ—Ä—Ö—á–µ–ª–æ–≤–µ–∫";
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≥–æ–ª–æ–¥–∞
    function getHungerStatus(hunger) {
        if (hunger >= 10) return "üíö –°—ã—Ç";
        if (hunger >= 9) return "üíö –ü–æ—á—Ç–∏ —Å—ã—Ç";
        if (hunger >= 8) return "üíö –õ–µ–≥–∫–æ–µ —á—É–≤—Å—Ç–≤–æ –≥–æ–ª–æ–¥–∞";
        if (hunger >= 7) return "üíõ –ù–µ–º–Ω–æ–≥–æ –≥–æ–ª–æ–¥–µ–Ω";
        if (hunger >= 6) return "üíõ –ó–∞–º–µ—Ç–Ω–æ –≥–æ–ª–æ–¥–µ–Ω";
        if (hunger >= 5) return "üíõ –î–æ–≤–æ–ª—å–Ω–æ –≥–æ–ª–æ–¥–µ–Ω";
        if (hunger >= 4) return "üß° –°–∏–ª—å–Ω–æ –≥–æ–ª–æ–¥–µ–Ω";
        if (hunger >= 3) return "üß° –û—á–µ–Ω—å –≥–æ–ª–æ–¥–µ–Ω";
        if (hunger >= 2) return "‚ù§Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≥–æ–ª–æ–¥–µ–Ω";
        if (hunger >= 1) return "‚ù§Ô∏è –£–º–∏—Ä–∞–µ—Ç –æ—Ç –≥–æ–ª–æ–¥–∞";
        if (hunger <= 0) return "üíÄ –£–º–µ—Ä –æ—Ç –≥–æ–ª–æ–¥–∞";
        return "‚≠ê –°–≤–µ—Ä—Ö–Ω–∞—Å—ã—â–µ–Ω";
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
    function getInventoryDisplay() {
        try {
            var inventory = story.variablesState.inventory;

            // –ï—Å–ª–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç–æ–π –∏–ª–∏ —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ "–ù–∏—á–µ–≥–æ"
            if (!inventory || inventory === "–ù–∏—á–µ–≥–æ") {
                return "–ü—É—Å—Ç–æ";
            }

            // –ï—Å–ª–∏ —ç—Ç–æ InkList (—Å–ø–∏—Å–æ–∫ –≤ Ink)
            if (inventory && typeof inventory === 'object' && inventory.Count !== undefined) {
                if (inventory.Count === 0) {
                    return "–ü—É—Å—Ç–æ";
                }

                // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞
                var items = [];
                if (inventory.orderedItems) {
                    for (var i = 0; i < inventory.orderedItems.length; i++) {
                        var item = inventory.orderedItems[i];
                        if (item.Key && item.Key.itemName) {
                            items.push(item.Key.itemName);
                        }
                    }
                }

                if (items.length === 0) {
                    return "–ü—É—Å—Ç–æ";
                } else if (items.length === 1) {
                    return items[0];
                } else if (items.length === 2) {
                    return items[0] + " –∏ " + items[1];
                } else {
                    return items.slice(0, -1).join(", ") + " –∏ " + items[items.length - 1];
                }
            }

            // –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ –¥—Ä—É–≥–æ–π —Ç–∏–ø
            return inventory.toString();

        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è:', e);
            return "–û—à–∏–±–∫–∞";
        }
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
    function displayStatus(statusLines) {
        statusPanel.innerHTML = '';

        for (var i = 0; i < statusLines.length; i++) {
            var line = statusLines[i];
            if (line.trim()) {
                var p = document.createElement('p');
                p.textContent = line;
                statusPanel.appendChild(p);
            }
        }
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –≤—ã–±–æ—Ä–æ–≤
    function updateChoicesPanel() {
        choicesPanel.innerHTML = '';

        var choices = story.currentChoices;

        if (choices.length === 0) {
            var noChoices = document.createElement('p');
            noChoices.textContent = '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π';
            noChoices.style.color = 'var(--text-secondary)';
            noChoices.style.fontStyle = 'italic';
            choicesPanel.appendChild(noChoices);
            return;
        }

        choices.forEach(function(choice, index) {
            var choiceElement = document.createElement('div');
            choiceElement.classList.add('choice');

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–≥–∏ –≤—ã–±–æ—Ä–∞
            var isClickable = true;
            var customClasses = [];
            var choiceTags = choice.tags || [];

            for (var i = 0; i < choiceTags.length; i++) {
                var tag = choiceTags[i];
                if (tag.toUpperCase() === "UNCLICKABLE") {
                    isClickable = false;
                }

                var splitTag = splitPropertyTag(tag);
                if (splitTag && splitTag.property.toUpperCase() === "CLASS") {
                    customClasses.push(splitTag.val);
                }
            }

            // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∫–ª–∞—Å—Å—ã
            for (var i = 0; i < customClasses.length; i++) {
                choiceElement.classList.add(customClasses[i]);
            }

            if (isClickable) {
                var link = document.createElement('a');
                link.href = '#';
                link.textContent = choice.text;
                link.addEventListener('click', function(choiceIndex) {
                    return function(event) {
                        event.preventDefault();
                        window.hasDoneChoice = true
                        makeChoice(choiceIndex);
                    };
                }(choice.index));
                choiceElement.appendChild(link);
            } else {
                var span = document.createElement('span');
                span.classList.add('unclickable');
                span.textContent = choice.text;
                choiceElement.appendChild(span);
            }

            choicesPanel.appendChild(choiceElement);
        });
    }

    // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞
    function makeChoice(choiceIndex) {
        // –ù–∞—Ö–æ–¥–∏–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
        var selectedChoice = null;
        var choices = story.currentChoices;
        for (var i = 0; i < choices.length; i++) {
            if (choices[i].index === choiceIndex) {
                selectedChoice = choices[i];
                break;
            }
        }

        // –û—á–∏—â–∞–µ–º –ø–∞–Ω–µ–ª—å –≤—ã–±–æ—Ä–æ–≤
        choicesPanel.innerHTML = '<p style="color: var(--text-secondary); font-style: italic;">–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...</p>';

        // –î–æ–±–∞–≤–ª—è–µ–º –±–ª–æ–∫ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –¥–µ–π—Å—Ç–≤–∏–µ–º
        if (selectedChoice) {
            lastChoiceText = selectedChoice.text; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä
            addStoryBlock('choice', selectedChoice.text);
        }

        // –í—ã–±–∏—Ä–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç
        story.ChooseChoiceIndex(choiceIndex);

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ—á–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–≤–∫–ª—é—á–∞—è –ø–æ—Å–ª–µ–¥–Ω–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ)
        savePoint = JSON.stringify({
            storyState: story.state.toJson(),
            lastChoice: lastChoiceText
        });

        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
        setTimeout(function() {
            continueStory();
        }, 100);
    }

    // –û—á–∏—Å—Ç–∫–∞ –ø–∞–Ω–µ–ª–∏
    function clearPanel(panel) {
        if (panel) {
            panel.innerHTML = '';
        }
    }

    // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã
    function restart() {
        story.ResetState();
        lastChoiceText = ""; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤—ã–±–æ—Ä
        clearPanel(storyPanel);
        clearPanel(choicesPanel);

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º placeholder –¥–ª—è –∫–∞—Ä—Ç–∏–Ω–∫–∏
        imagePanel.innerHTML = '<div class="placeholder-image"><span>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</span></div>';

        // –°–±—Ä–æ—Å —Å—Ç–∞—Ç—É—Å–∞
        statusPanel.innerHTML = '<div class="status-placeholder"><p>üìç –õ–æ–∫–∞—Ü–∏—è: –ó–∞–≥—Ä—É–∑–∫–∞...</p><p>‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: --/--</p><p>üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: –ó–∞–≥—Ä—É–∑–∫–∞...</p></div>';

        savePoint = JSON.stringify({
            storyState: story.state.toJson(),
            lastChoice: ""
        });
        continueStory(true);
    }

    // –ü–∞—Ä—Å–∏–Ω–≥ —Ç–µ–≥–æ–≤ –≤–∏–¥–∞ "PROPERTY: value"
    function splitPropertyTag(tag) {
        var colonIndex = tag.indexOf(":");
        if (colonIndex !== -1) {
            var property = tag.substr(0, colonIndex).trim();
            var val = tag.substr(colonIndex + 1).trim();
            return {
                property: property,
                val: val
            };
        }
        return null;
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    function loadSavePoint() {
        try {
            var savedData = window.localStorage.getItem('ink-save-state');
            if (savedData) {
                var parsedData = JSON.parse(savedData);

                // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π (—Ç–æ–ª—å–∫–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏)
                if (typeof parsedData === 'string') {
                    story.state.LoadJson(parsedData);
                    lastChoiceText = "";
                } else {
                    // –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç (—Å–æ—Å—Ç–æ—è–Ω–∏–µ + –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤—ã–±–æ—Ä)
                    story.state.LoadJson(parsedData.storyState);
                    lastChoiceText = parsedData.lastChoice || "";
                }

                // –û—á–∏—â–∞–µ–º –ø–∞–Ω–µ–ª–∏
                clearPanel(storyPanel);
                clearPanel(choicesPanel);

                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
                if (lastChoiceText) {
                    addStoryBlock('choice', lastChoiceText);
                }

                return true;
            }
        } catch (e) {
            console.debug("Couldn't load save state");
        }
        return false;
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã
    function setupTheme(globalTagTheme) {
        var savedTheme;
        try {
            savedTheme = window.localStorage.getItem('ink-theme');
        } catch (e) {
            console.debug("Couldn't load saved theme");
        }

        var browserDark = window.matchMedia("(prefers-color-scheme: dark)").matches;

        if (savedTheme === "light" ||
            (savedTheme == undefined && globalTagTheme === "light") ||
            (savedTheme == undefined && globalTagTheme == undefined && !browserDark)) {
            document.body.classList.add("light");
        }
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–æ–∫
    function setupButtons(hasSave) {
        var rewindEl = document.getElementById("rewind");
        if (rewindEl) {
            rewindEl.addEventListener("click", function() {
                restart();
            });
        }

        var saveEl = document.getElementById("save");
        if (saveEl) {
            saveEl.addEventListener("click", function() {
                try {
                    window.localStorage.setItem('ink-save-state', savePoint);
                    document.getElementById("reload").removeAttribute("disabled");
                    window.localStorage.setItem('ink-theme', document.body.classList.contains("light") ? "light" : "dark");

                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                    saveEl.textContent = "‚úì –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ";
                    setTimeout(function() {
                        saveEl.textContent = "üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å";
                    }, 1000);
                } catch (e) {
                    console.warn("Couldn't save state");
                }
            });
        }

        var reloadEl = document.getElementById("reload");
        if (reloadEl) {
            if (!hasSave) {
                reloadEl.setAttribute("disabled", "disabled");
            }
            reloadEl.addEventListener("click", function() {
                if (reloadEl.getAttribute("disabled")) return;

                // –ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É - —ç—Ç–æ –ø—Ä–æ—â–µ –∏ –Ω–∞–¥–µ–∂–Ω–µ–µ
                window.location.reload();
            });
        }

        var themeSwitchEl = document.getElementById("theme-switch");
        if (themeSwitchEl) {
            themeSwitchEl.addEventListener("click", function() {
                document.body.classList.toggle("light");

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä —Ç–µ–º—ã
                try {
                    window.localStorage.setItem('ink-theme', document.body.classList.contains("light") ? "light" : "dark");
                } catch (e) {
                    console.debug("Couldn't save theme preference");
                }
            });
        }
    }

    function setupAutoSave() {
        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–∫–∏–¥–∞–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        window.addEventListener('beforeunload', function() {
            try {
                if(window.hasDoneChoice) {
                    window.localStorage.setItem('ink-save-state', savePoint);
                }
                window.localStorage.setItem('ink-theme', document.body.classList.contains("light") ? "light" : "dark");
            } catch (e) {
                console.warn("Couldn't auto-save state");
            }
        })}

})(storyContent);