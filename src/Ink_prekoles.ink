LIST inventory = –ù–∏—á–µ–≥–æ
VAR current_location = "–¢–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞"
VAR hp = 10
VAR max_hp = 10
VAR hunger = 10
VAR max_hunger = 10
VAR money = 0
VAR money_name = "–†—É–±–ª–µ–π"

=== function show_status() ===
{"-----------------------------------------------------------------------------"}
üìç –õ–æ–∫–∞—Ü–∏—è: {current_location}
‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: {hp}/{max_hp} ({get_hp_status()})
üçñ –ì–æ–ª–æ–¥: {hunger}/{max_hunger} ({get_hunger_status()})
üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: {get_inventory_display()}
{money_name != "": üíé {money_name}: {money}}
{"-----------------------------------------------------------------------------"}


=== function get_hp_status() ===
{
- hp == 10: ~ return "üíö –ê–±—Å–æ–ª—é—Ç–Ω–æ –∑–¥–æ—Ä–æ–≤"
- hp == 9: ~ return "üíö –ü–æ—á—Ç–∏ –∏–¥–µ–∞–ª—å–Ω–æ"
- hp == 8: ~ return "üíö –í —Ö–æ—Ä–æ—à–µ–π —Ñ–æ—Ä–º–µ"
- hp == 7: ~ return "üíõ –õ—ë–≥–∫–∏–µ —Ü–∞—Ä–∞–ø–∏–Ω—ã"
- hp == 6: ~ return "üíõ –ù–µ–º–Ω–æ–≥–æ –ø–æ–±–∏—Ç"
- hp == 5: ~ return "üíõ –ó–∞–º–µ—Ç–Ω–æ –ø–æ—Ç—Ä–µ–ø–∞–Ω"
- hp == 4: ~ return "üß° –°–∏–ª—å–Ω–æ —Ä–∞–Ω–µ–Ω"
- hp == 3: ~ return "üß° –¢—è–∂–µ–ª–æ —Ä–∞–Ω–µ–Ω"
- hp == 2: ~ return "‚ù§Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ"
- hp == 1: ~ return "‚ù§Ô∏è –ü—Ä–∏ —Å–º–µ—Ä—Ç–∏"
- hp <= 0: ~ return "üíÄ –ú—ë—Ä—Ç–≤"
- else: ~ return "‚≠ê –°–≤–µ—Ä—Ö—á–µ–ª–æ–≤–µ–∫"
}

=== function get_hunger_status() ===
{
- hunger == 10: ~ return "üíö –°—ã—Ç"
- hunger == 9: ~ return "üíö –ü–æ—á—Ç–∏ —Å—ã—Ç"
- hunger == 8: ~ return "üíö –õ–µ–≥–∫–æ–µ —á—É–≤—Å—Ç–≤–æ –≥–æ–ª–æ–¥–∞"
- hunger == 7: ~ return "üíõ –ù–µ–º–Ω–æ–≥–æ –≥–æ–ª–æ–¥–µ–Ω"
- hunger == 6: ~ return "üíõ –ó–∞–º–µ—Ç–Ω–æ –≥–æ–ª–æ–¥–µ–Ω"
- hunger == 5: ~ return "üíõ –î–æ–≤–æ–ª—å–Ω–æ –≥–æ–ª–æ–¥–µ–Ω"
- hunger == 4: ~ return "üß° –°–∏–ª—å–Ω–æ –≥–æ–ª–æ–¥–µ–Ω"
- hunger == 3: ~ return "üß° –û—á–µ–Ω—å –≥–æ–ª–æ–¥–µ–Ω"
- hunger == 2: ~ return "‚ù§Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≥–æ–ª–æ–¥–µ–Ω"
- hunger == 1: ~ return "‚ù§Ô∏è –£–º–∏—Ä–∞–µ—Ç –æ—Ç –≥–æ–ª–æ–¥–∞"
- hunger <= 0: ~ return "üíÄ –£–º–µ—Ä –æ—Ç –≥–æ–ª–æ–¥–∞"
- else: ~ return "‚≠ê –°–≤–µ—Ä—Ö–Ω–∞—Å—ã—â–µ–Ω"
}

=== function get_inventory_display() ===
{inventory == (): –ü—É—Å—Ç–æ|{inventory}}

=== function to_inventory(ref list_from, item) ===
~ list_from -= item
~ inventory += item


=== status_thread ===
{show_status()}
{hp <= 0:
–ü –û –¢ –† –ê –ß –ï –ù –û
-> end_game
}
{hunger <= 0:
–£ –ú –ï –†   –û –¢   –ì –û –õ –û –î –ê
-> end_game
}
->->

=== move(-> place_to_return_to)
~ temp random_hunger = RANDOM(1, 3)
{random_hunger == 1:
    ~ hunger -= 1
}
-> status_thread -> place_to_return_to


=== function iterate(prefix, list_to_iterate) ===
~ temp count = LIST_COUNT(list_to_iterate)

// –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç–æ–π
{count == 0:
    ~ return ""
}

// –ï—Å–ª–∏ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—é
{count == 1:
    ~ return prefix + " {list_to_iterate}"
}

// –ï—Å–ª–∏ –¥–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
{count == 2:
    ~ temp first = LIST_MIN(list_to_iterate)
    ~ temp second = LIST_MAX(list_to_iterate)
    ~ return prefix + " {first} –∏ {second}"
}

// –ï—Å–ª–∏ –±–æ–ª—å—à–µ –¥–≤—É—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
{count > 2:
    ~ return prefix + " " + format_list_items(list_to_iterate)
}

~ return ""

=== function format_list_items(items) ===
~ temp count = LIST_COUNT(items)
~ temp first = LIST_MIN(items)
~ temp remaining = items - first

{
- count == 1:
    ~ return "{first}"
- count == 2:
    ~ temp last = LIST_MAX(remaining)
    ~ return "{first} –∏ {last}"
- else:
    ~ return "{first}, " + format_list_items(remaining)
}


=== end_game ===
–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!
-> END
//–ö–∞–∫ –≤–∏–¥–∏—à—å —Ñ–∞–π–ª –º—ã –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π